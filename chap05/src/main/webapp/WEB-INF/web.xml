<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  <display-name>chap05</display-name>
  
  <!-- web.xml에 서블릿 등록하기 -->
  
  <!-- (1) .java 서블릿 등록하기 (servlet-class) -->
  <servlet>
        <!-- servlet-name :  쓰고 싶은 서블릿명을 설정 -->
        <servlet-name>servlet1</servlet-name>
        <!-- servlet-class : 실제 클래스 위치 -->
        <servlet-class>chap05.servlet.HelloServlet</servlet-class>
        
        <!-- 지역 초기화 파라미터 (이 서블릿 안에서만 사용 가능한 값) -->
        <init-param>
        	<param-name>path</param-name>
        	<param-value>localhost:1521/XE</param-value>
        </init-param>
 		<init-param>
 			<param-name>user</param-name>
 			<param-value>hr</param-value>
 		</init-param>
 		<init-param>
 			<param-name>password</param-name>
 			<param-value>1234</param-value>
 		</init-param>   
  </servlet>
  
  <!-- (2) .jsp 서블릿 등록하기 (jsp-file) -->
  <servlet>
  	<servlet-name>servlet2</servlet-name>
  	<jsp-file>/HelloJsp.jsp</jsp-file>
  </servlet>
  
  <servlet>
  	<servlet-name>elseServlet</servlet-name>
  	<servlet-class>chap05.servlet.ElseServlet</servlet-class>
  </servlet>
  
   <!-- 2. encoding 서블릿 등록하기 -->
  <servlet>
  	<servlet-name>encodingTest</servlet-name>
  	<servlet-class>chap05.servlet.EncodingServlet</servlet-class>
  </servlet> 
  <!-- 2. encoding 서블릿 등록하기 -->
  
  <!-- 등록된 서블릿 매핑하기 -->
 
  <!-- 
  	# url-pattern에 사용할 수 있는 것들
  	* : 모든 것
  	/path/* : 해당 경로 이후의 모든 것
  	*.hello : 확장자가 .hello인 모든 것
  	/ : else와 같은 역할. 아무런 매핑에도 걸리지 않은 요청이 가는 곳 (중요)
   -->
   
  <servlet-mapping>
        <!-- servlet-name : 위에서 등록한 서블릿 이름을 사용 -->
        <servlet-name>servlet1</servlet-name>
        <!-- url-pattern : 어떤 주소로 접속해야 해당 서블릿으로 갈지 설정 -->
        <!-- 주소창 : localhost:9000/chap05/hello를 치면 HelloServlet!을 띄운다 -->
        <url-pattern>/hello</url-pattern>
  </servlet-mapping>
  
  <!--  /chap05/jsp/로 시작하는 모든 uri가 servlet2로 매핑됨 -->
  <!-- 주소창 : localhost:9000/chap05/jsp 치고 뒤에 아무거나 쳐도 Hello JSP를 띄운다 -->
  <servlet-mapping>
  	<servlet-name>servlet2</servlet-name>
  	<url-pattern>/jsp/*</url-pattern> <!-- jsp 뒤에 오는 모든것을 servlet2에 보내겠다 -->
  </servlet-mapping>
  
  <!-- ex : http://localhost:9000/chap05/i%E3%85%81%E3%85%87%E3%84%BB%E3%84%B4%E3%85%87%E3%84%B9,.hi -->
  <servlet-mapping>
  	<servlet-name>servlet1</servlet-name>
  	<url-pattern>*.hi</url-pattern>
  </servlet-mapping>
  
  <!-- 
  http://localhost:9000/chap05/jsp/%E3%85%81%E3%85%81%E3%85%81/AA/.hi
  로 주소치면 /jsp/가 나온다!
  -->
  
  <!-- ex : http://localhost:9000/chap05/abc.bye -->
  <servlet-mapping>
  	<servlet-name>servlet2</servlet-name>
  	<url-pattern>*.bye</url-pattern>
  </servlet-mapping>
  
   <!-- 3. encoding 매핑하기 -->
   <servlet-mapping>
  	<servlet-name>encodingTest</servlet-name>
  	<url-pattern>/encodingTest/*</url-pattern>
  </servlet-mapping>
  <!-- 3. encoding 매핑하기 -->
  
  <!-- / : 여태까지 설정된 모든 매핑에 걸리지 않은 경우를 의미함 -->
  <!--  ex : http://localhost:9000/chap05/spring/test -->
  <servlet-mapping>
  	<servlet-name>elseServlet</servlet-name>
  	<url-pattern>/</url-pattern>
  </servlet-mapping>
  
  <!-- 
  	# 초기화 파라미터 (Init Parameter)
 	· 웹 서버를 처음 시작할 때 초기화되는 변수들
 	· 모든 서블릿에서 사용할 수 있는 context-param이 있고
 	  설정한 서블릿에서만 사용할 수 있는 init-param이 있다
  -->
  
  <!-- context-param : 모든 서블릿(서버 전체, 모든 java, 모든 jsp)에서 접근할 수 있는 초기화 파라미터 -->
  <context-param>
  	<param-name>home</param-name>
  	<param-value>/chap05/index.jsp</param-value>
  </context-param>
  
</web-app>